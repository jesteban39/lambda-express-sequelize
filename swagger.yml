openapi: 3.0.0
info:
  title: lambda-express-sequelize
  description: documentaci√≥n lambda-express-sequelize
  version: 1.0.0
  servers:
    - http://localhost:4000
paths:
  /api/Client:
    get:
      tags:
        - Client
      parameters: []
      requestBody: null
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                example:
                  - uuid: 0f10327e-7e2e-4532-844a-013fdd6159c6
                    nombre: usuario nombre
                  - uuid: 6f485f6a-bc28-4f53-aa58-88932799411f
                    nombre: usuario nombre
                  - uuid: be4f667a-3a50-4a81-bc44-02136f3306a6
                    nombre: usuario nombre
    post:
      tags:
        - Client
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example: &ref_0
                uuid: 1eb2a7df-9267-46cc-9b0b-354b3c784dfb
                nombre: usuario nombre
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                example: *ref_0
  /api/Client/{uuid}:
    put:
      tags:
        - Client
      parameters:
        - name: uuid
          in: path
          type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example: &ref_1
                uuid: be4f667a-3a50-4a81-bc44-02136f3306a6
                nombre: usuario nombre
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                example: *ref_1
  /api/Client/filter?nombre={nombre}:
    get:
      tags:
        - Client
      parameters:
        - name: nombre
          in: path
          type: string
          required: false
      requestBody: null
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                example:
                  - uuid: 0f10327e-7e2e-4532-844a-013fdd6159c6
                    nombre: usuario nombre
                  - uuid: 1eb2a7df-9267-46cc-9b0b-354b3c784dfb
                    nombre: usuario nombre
                  - uuid: 6f485f6a-bc28-4f53-aa58-88932799411f
                    nombre: usuario nombre
                  - uuid: be4f667a-3a50-4a81-bc44-02136f3306a6
                    nombre: usuario nombre
  /api/User:
    get:
      tags:
        - User
      parameters: []
      requestBody: null
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                example:
                  - uuid: 0f10327e-7e2e-4532-844a-013fdd6159c6
                    nombre: usuario nombre
                  - uuid: 6f485f6a-bc28-4f53-aa58-88932799411f
                    nombre: usuario nombre
                  - uuid: be4f667a-3a50-4a81-bc44-02136f3306a6
                    nombre: usuario nombre
    post:
      tags:
        - User
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example: &ref_2
                uuid: 1eb2a7df-9267-46cc-9b0b-354b3c784dfb
                nombre: usuario nombre
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                example: *ref_2
  /api/User/{uuid}:
    put:
      tags:
        - User
      parameters:
        - name: uuid
          in: path
          type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example: &ref_3
                uuid: be4f667a-3a50-4a81-bc44-02136f3306a6
                nombre: usuario nombre
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                example: *ref_3
  /api/User/filter?nombre={nombre}:
    get:
      tags:
        - User
      parameters:
        - name: nombre
          in: path
          type: string
          required: false
      requestBody: null
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                example:
                  - uuid: 0f10327e-7e2e-4532-844a-013fdd6159c6
                    nombre: usuario nombre
                  - uuid: 1eb2a7df-9267-46cc-9b0b-354b3c784dfb
                    nombre: usuario nombre
                  - uuid: 6f485f6a-bc28-4f53-aa58-88932799411f
                    nombre: usuario nombre
                  - uuid: be4f667a-3a50-4a81-bc44-02136f3306a6
                    nombre: usuario nombre
components:
  parameters: {}
  definitions: {}
  schemas:
    usuario:
      type: object
      properties:
        uuid:
          type: string
          required: true
          description: identificador universal unico para la tabal usuario
          example: '3973'
        nombre:
          type: string
          required: true
          description: nombre de usuario
          example: '3973'
    cliente:
      type: object
      properties:
        uuid:
          type: string
          required: true
          description: identificador universal unico para la tabal cliente
          example: '3973'
        nombre:
          type: string
          required: true
          description: nombre del clinete
          example: '3973'
  tags:
    - User
    - Client
