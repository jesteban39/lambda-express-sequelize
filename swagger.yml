openapi: 3.0.0
info:
  title: lambda-express-sequelize
  description: documentaci√≥n lambda-express-sequelize
  version: 1.0.0
  servers:
    - http://localhost:4000
paths:
  /api/User:
    get:
      tags:
        - User
      parameters: []
      requestBody: null
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                example:
                  - uuid: 5aef01b3-e75b-4d8b-8992-133b41fa4a13
                    nombre: usuario nombre
                  - uuid: bd2f5adf-8820-4395-af04-190cbf067441
                    nombre: usuario nombre
                  - uuid: fbf17a72-7971-44fc-bf5d-f74e11032264
                    nombre: usuario nombre
    post:
      tags:
        - User
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example: &ref_0
                uuid: 8d85f842-1e6e-4829-97fc-f852dff7a5c6
                nombre: usuario nombre
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                example: *ref_0
  /api/User/{uuid}:
    put:
      tags:
        - User
      parameters:
        - name: uuid
          in: path
          type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example: &ref_1
                uuid: bd2f5adf-8820-4395-af04-190cbf067441
                nombre: usuario nombre
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                example: *ref_1
  /api/User/filter?nombre={nombre}:
    get:
      tags:
        - User
      parameters:
        - name: nombre
          in: path
          type: string
          required: false
      requestBody: null
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                example:
                  - uuid: 5aef01b3-e75b-4d8b-8992-133b41fa4a13
                    nombre: usuario nombre
                  - uuid: 8d85f842-1e6e-4829-97fc-f852dff7a5c6
                    nombre: usuario nombre
                  - uuid: bd2f5adf-8820-4395-af04-190cbf067441
                    nombre: usuario nombre
                  - uuid: fbf17a72-7971-44fc-bf5d-f74e11032264
                    nombre: usuario nombre
  /api/Client:
    get:
      tags:
        - Client
      parameters: []
      requestBody: null
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                example:
                  - uuid: 3df7b3ac-6e90-474b-9f06-3b027416434e
                    nombre: cliente nombre
                  - uuid: ab2f5c9d-2304-4340-bf2c-a3cd26358ea8
                    nombre: cliente nombre
                  - uuid: dd9b7858-86fe-458d-b9ab-d8993e2f2e7f
                    nombre: cliente nombre
    post:
      tags:
        - Client
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example: &ref_2
                uuid: 2d4283cc-f721-440a-b844-61373d78cc29
                nombre: cliente nombre
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                example: *ref_2
  /api/Client/{uuid}:
    put:
      tags:
        - Client
      parameters:
        - name: uuid
          in: path
          type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              example: &ref_3
                uuid: dd9b7858-86fe-458d-b9ab-d8993e2f2e7f
                nombre: cliente nombre
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                example: *ref_3
  /api/Client/filter?nombre={nombre}:
    get:
      tags:
        - Client
      parameters:
        - name: nombre
          in: path
          type: string
          required: false
      requestBody: null
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                example:
                  - uuid: 2d4283cc-f721-440a-b844-61373d78cc29
                    nombre: cliente nombre
                  - uuid: 3df7b3ac-6e90-474b-9f06-3b027416434e
                    nombre: cliente nombre
                  - uuid: ab2f5c9d-2304-4340-bf2c-a3cd26358ea8
                    nombre: cliente nombre
                  - uuid: dd9b7858-86fe-458d-b9ab-d8993e2f2e7f
                    nombre: cliente nombre
components:
  parameters: {}
  definitions: {}
  schemas:
    usuario:
      type: object
      properties:
        uuid:
          type: string
          required: true
          description: identificador universal unico para la tabal usuario
          example: '3973'
        nombre:
          type: string
          required: true
          description: nombre de usuario
          example: '3973'
    cliente:
      type: object
      properties:
        uuid:
          type: string
          required: true
          description: identificador universal unico para la tabal cliente
          example: '3973'
        nombre:
          type: string
          required: true
          description: nombre del clinete
          example: '3973'
  tags:
    - User
    - Client
